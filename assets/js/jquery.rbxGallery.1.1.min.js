/*
bxGallery v1.1
Plugin developed by: Steven Wanderski
http://bxgalleryplugin.com
http://stevenwanderski.com

Released under the GPL license:
http://www.gnu.org/licenses/gpl.html
*/
(function (jQuery) {
    jQuery.fn.extend({
        bxGallery: function (options) {
            var defaults = {
                maxwidth: jQuery('#gal_size').val(),
                maxheight: '',
                thumbwidth: jQuery('#thumbsize').val(),
                thumbcrop: true,
                croppercent: .45,
                thumbplacement: jQuery('#thumbstyle').val(),
                thumbcontainer: '',
                opacity: .7,
                load_text: '',
                load_image: 'http://i302.photobucket.com/albums/nn92/wandoledzep/spinner.gif',
                wrapperclass: 'outer'
            }
            var options = jQuery.extend(defaults, options);
            var o = options;
            var cont = '';
            var caption = '';
            var jQueryouter = '';
            var jQueryorig = this;
            var tall = 0;
            var wide = 0;
            var showing = 0;
            var i = 0;
            var k = jQueryorig.find('img').size();
            var current;
            preload_img();

            function preload_img() {
                jQueryorig.hide();
                if (o.load_text != '') {
                    jQueryorig.before('<div id="loading">' + o.load_text + '</div>');
                } else {
                    jQueryorig.before('<div id="loading"><img src="' + o.load_image + '" /></div>');
                }
                jQueryorig.parent().find('#loading').css({
                    'textAlign': 'center',
                    'width': o.maxwidth
                });
                jQueryorig.find('img').each(function () {
                    var the_source = jQuery(this).attr('src');
                    var the_img = new Image();
                    the_img.onload = function () {
                        preload_check();
                    };
                    the_img.src = the_source;
                });
            }

            function preload_check() {
                i++;
                if (i == k) {
                    init();
                }
            }

            function init() {
                set_layout();
                set_main_img();
                place_thumbcontainer();
                set_thumbs();
            }

            function set_layout() {
                jQueryorig.parent().find('#loading').hide();
                jQueryorig.show();
                jQueryorig.wrap('<div class="' + o.wrapperclass + '"></div><div class="clear"></div>');
                jQueryouter = jQueryorig.parent();
                jQueryorig.find('li').css({
                    'position': 'absolute'
                });
            }

            function set_main_img() {
                jQueryorig.find('a.jqzoom').each(function () {
                    var jQuerythis = jQuery(this);
                    var jQueryimgheight = jQuerythis.height();
                    var jQueryimgwidth = jQuerythis.width();
/*               if (jQuerythis.attr('title') != '') {
                        caption = jQuerythis.attr('title');
                        jQuerythis.parent().append('<div class="caption">' + caption + '</div>');
                    }*/
                    if (jQuerythis.width() > o.maxwidth) {
                        jQuerythis.width(o.maxwidth);
                    }
                    tall = jQuerythis.height();
                    wide = jQuerythis.width();
                    src = jQuerythis.attr('href');
                    src1 = src.substring(0, src.length - 4) + '-150x150';
                    src2 = src.substring(src.length - 4, src.length);
                    srcNew = src1 + src2;
                    cont += '<li><img src="' + srcNew + '" /></li>';
                });
                jQueryorig.find('li:not(:first)').hide();
                jQueryorig.height(tall);
                jQueryorig.width(parseInt(o.maxwidth) + 18);
            }

            function place_thumbcontainer() {
                if (o.thumbplacement == 'top') {
                    jQueryouter.prepend('<ul class="thumbs">' + cont + '</ul>');
                    jQueryouter.find('.thumbs').css({
                        'overflow': 'auto'
                    });
                } else if (o.thumbplacement == 'left') {
                    jQueryouter.prepend('<ul class="thumbs">' + cont + '</ul>');
                    jQueryorig.css({
                        'float': 'left'
                    });
                    jQueryouter.find('.thumbs').css({
                        'float': 'left',
                        'width': parseInt(o.thumbwidth) + 14
                    });
                } else if (o.thumbplacement == 'bottom') {
                    jQueryouter.append('<ul class="thumbs">' + cont + '</ul>');
                    jQueryouter.find('.thumbs').css({
                        'clear': 'both'
                    });
                } else if (o.thumbplacement == 'right') {
                    jQueryouter.append('<ul class="thumbs">' + cont + '</ul>');
                    jQueryorig.css({
                        'float': 'left'
                    });
                    jQueryouter.find('.thumbs').css({
                        'float': 'left',
                        'width': parseInt(o.thumbwidth) + 14
                    });
                } else if (o.thumbplacement == 'hide') {}
                jQueryouter.append('<div style="clear:both"></div>');
                if (o.thumbcontainer != '') {
                    jQueryouter.find('.thumbs').width(o.thumbcontainer);
                }
                if (jQueryouter.find('.thumbs li').size() == 1) {
                    jQueryouter.find('.thumbs').css({
                        'display': 'none'
                    });
                }
            }

            function set_thumbs() {
                jQueryouter.find('.thumbs li').each(function () {
                    var jQuerythis = jQuery(this);
                    var jQueryimg = jQuerythis.find('img');
                    var jQueryimgwidth = jQueryimg.width();
                    var jQueryimgheight = jQueryimg.height();
                    var aspectRatio = jQueryimgheight / jQueryimgwidth;
                    var max_size = 150;
                    if (jQueryimg.height() > jQueryimg.width()) {
                        var h = max_size;
                        var w = Math.ceil(jQueryimg.width() / jQueryimg.height() * max_size);
						var equal=false;
                    } else  if (jQueryimg.height() < jQueryimg.width()) {
                        var w = max_size;
                        var h = Math.ceil(jQueryimg.height() / jQueryimg.width() * max_size);
						var equal=false;
                    } else {
						var equal=true;
					}
                    if (o.thumbcrop) {
						if(equal==true){
							jQueryimg.width(o.thumbwidth);
							jQueryimg.height(o.thumbwidth);
						}else {
							jQueryimg.width(w);
							jQueryimg.height(aspectRatio * w);
							jQueryimg.css({
								left: (o.thumbwidth / 2) - (w / 2),
								top: (o.thumbwidth / 2) - (h / 2)
							});
						}
                        jQuerythis.css({
                            'float': 'left',
                            'width': o.thumbwidth,
                            'height': o.thumbwidth,
                            'overflow': 'hidden',
                            'cursor': 'pointer'
                        });
                    } else {
                        jQueryimg.width(o.thumbwidth);
                        jQueryimg.height((jQueryimgheight / jQueryimgwidth) * o.thumbwidth);
                        jQuerythis.css({
                            'float': 'left',
                            'cursor': 'pointer'
                        });
                        jQuerythis.height(jQueryimg.height());
                    }
                    jQuerythis.click(function () {
                        var x = jQueryouter.find('.thumbs li').index(jQuerythis);
                        if (showing != x) {
                            jQueryorig.find('li').fadeOut();
                            jQueryorig.find('li').eq(x).fadeIn();
                            showing = x;
                            var ht = jQueryorig.find('li img.imgli').eq(x).height() + 18;
                            var wd = jQueryorig.find('li img.imgli').eq(x).width() + 18;
							if (o.thumbplacement == 'bottom' || o.thumbplacement == 'top') {
								jQueryouter.find('.thumbs').animate({
									'width': wd
								}, "fast");
							}else if (o.thumbplacement == 'left' || o.thumbplacement == 'right') {
								if( ht < ((jQuery('ul.thumbs > li').size())* (parseInt(o.thumbwidth)+15)) ){
									var hh = (parseInt(o.thumbwidth)+15) * 2;
									
								}
								jQueryouter.find('.thumbs').animate({
									'width':hh 
								}, "fast");
							}
                            jQuery('.leftrtight').height(ht);
                            jQueryorig.animate({
                                'height': ht
                            }, "fast");
                            jQueryorig.animate({
                                'width': wd
                            }, "fast");
                        }
                    });
                });
                var jQuerythumb = jQueryouter.find('.thumbs li');
                jQuerythumb.eq(0).addClass('on');
                var ht = jQueryorig.find('li img.imgli').eq(0).height() + 18;
                var wd = jQueryorig.find('li img.imgli').eq(0).width() + 18;			
							if (o.thumbplacement == 'bottom' || o.thumbplacement == 'top') {
								jQueryouter.find('.thumbs').animate({
									'width': wd
								}, "fast");
							}else if (o.thumbplacement == 'left' || o.thumbplacement == 'right') {
								if( ht < ((jQuery('ul.thumbs > li').size())* (parseInt(o.thumbwidth)+15)) ){
									var hh = (parseInt(o.thumbwidth)+15) * 2;
									
								}
								jQueryouter.find('.thumbs').animate({
									'width':hh 
								}, "fast");
							}
                jQuery('.leftrtight').height(ht);
                jQueryorig.height(ht);
                jQueryorig.width(wd);
                jQuerythumb.not('.on').fadeTo(0, o.opacity);
                jQuerythumb.click(function () {
                    var t = jQuery(this);
                    var i = jQuerythumb.index(this);
                    if (current != i) {
                        jQuerythumb.removeClass('on');
                        t.addClass('on');
                        jQuerythumb.not('.on').fadeTo(200, o.opacity);
                        current = i;
                    }
                }).hover(function () {
                    jQuery(this).stop().fadeTo(200, 1);
                }, function () {
                    jQuery(this).not('.on').stop().fadeTo(200, o.opacity);
                });
            }
        }
    });
})(jQuery);